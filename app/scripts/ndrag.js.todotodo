//-------------обработчики событий для Drag Drop-----------------
				//---------------подумать о делегировании событий поднять выше
				var mouseOn;
				element.on("mousedown", function(event){
					
					
					var ev_el = angular.element(event.target);
					//if (ev_el.hasClass('activet')) {
						
						var elem = ev_el.clone(); 
						var el = elem[0];
						el.style.position = 'absolute';
						moveAt(event);
						// переместим в body
						
							//event.stopPropagation(); //---важно----
						el.style.zIndex = 1000; 
						
						function moveAt(event) {
							el.style.left = event.pageX - el.offsetWidth / 2 + 'px';
							el.style.top = event.pageY - el.offsetHeight / 2 + 'px';
						}
						var create = false;
						mouseOn = true;
						document.onmousemove = function(event) {
							
							if (!create && mouseOn) {
								document.body.appendChild(el);
								//---------каласс action нужен для того чтобы применять css hover для контейнера с данным
								//классом, но во время drag drop класс action нужно отключать так ховер ведет себя очень глючно 
								angular.element(document.body).find('.tree .action').toggleClass('action');
								create = true;
							}
							
								moveAt(event);
						}
						
						// 4. отследить окончание переноса
						elem.on('mouseup', function(event) {
							angular.element(document.body).find('.tree').toggleClass('action');
								console.log(document.elementFromPoint(100, 100)); //----так я найду элемент над которым мыш 
							document.onmousemove = null;
							elem.remove();
						});
					//}
				});
				element.on("mouseup", function(event){
					
						mouseOn = false;
				});
				//-----------конец драг анд дроп------------